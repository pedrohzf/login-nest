var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.535,1,2.065]],["body/controllers/AppController.html",[0,2.301,1,3.094,2,1.778,3,0.407,4,0.357,5,0.357,6,3.096,7,0.514,8,1.637,9,4.698,10,2.15,11,0.032,12,0.987,13,3.709,14,1.265,15,1.778,16,0.739,17,0.832,18,2.797,19,3.096,20,0.407,21,0.219,22,2.391,23,1.95,24,1.265,25,3.709,26,0.024,27,0.024]],["title/modules/AppModule.html",[28,1.29,29,2.065]],["body/modules/AppModule.html",[1,2.977,2,1.907,3,0.309,4,0.271,5,0.271,11,0.032,16,0.871,17,0.631,18,2.891,19,2.348,20,0.309,21,0.166,26,0.02,27,0.02,28,1.86,29,3.839,30,1.348,31,1.348,32,1.63,33,1.63,34,1.348,35,2.677,36,1.63,37,2.348,38,2.348,39,2.348,40,3.188,41,2.891,42,2.307,43,1.63,44,1.63,45,2.812,46,3.322,47,2.812,48,2.812,49,2.812,50,3.979,51,2.041,52,2.565,53,2.812,54,2.812,55,2.812,56,2.812]],["title/injectables/AppService.html",[18,1.684,57,0.657]],["body/injectables/AppService.html",[3,0.434,4,0.381,5,0.381,7,0.548,8,1.705,9,4.81,11,0.031,12,1.052,14,1.348,15,1.852,16,0.609,17,0.886,18,2.628,20,0.434,21,0.233,24,1.348,26,0.025,27,0.025,57,1.026,58,1.592,59,3.299,60,3.952,61,3.952,62,3.952]],["title/controllers/AuthController.html",[0,1.535,63,2.065]],["body/controllers/AuthController.html",[0,2.036,2,1.48,3,0.339,4,0.297,5,0.297,7,0.428,8,1.448,10,1.79,11,0.032,12,0.821,14,1.053,16,0.844,17,0.692,20,0.339,21,0.182,22,1.99,23,1.623,24,1.053,26,0.021,27,0.021,63,2.737,64,2.577,65,3.545,66,3.087,67,3.37,68,3.087,69,3.087,70,1.244,71,1.053,72,0.578,73,1.244,74,2.577,75,2.577,76,2.577,77,2.577,78,3.087,79,2.552,80,2.577,81,3.083,82,2.577,83,2.577,84,1.623,85,3.087,86,3.087,87,3.087,88,3.087,89,1.48,90,2.232,91,3.087]],["title/modules/AuthModule.html",[28,1.29,40,1.857]],["body/modules/AuthModule.html",[2,1.89,3,0.305,4,0.268,5,0.268,11,0.032,16,0.868,17,0.623,20,0.305,21,0.164,26,0.019,27,0.019,28,1.847,30,1.331,31,1.331,32,1.61,33,1.61,34,1.331,35,2.658,36,1.61,40,3.443,41,2.879,42,2.286,43,1.61,44,1.61,46,3.292,63,2.956,79,2.879,80,2.318,92,2.318,93,2.777,94,2.318,95,3.175,96,2.777,97,2.777,98,2.777,99,3.944,100,1.79,101,2.777,102,2.016,103,2.777,104,2.777,105,2.777,106,2.318,107,2.777,108,2.777,109,2.777]],["title/interfaces/AuthRequest.html",[110,1.535,111,2.065]],["body/interfaces/AuthRequest.html",[3,0.429,4,0.376,5,0.376,7,0.541,11,0.031,16,0.764,20,0.429,26,0.025,27,0.025,72,0.731,110,1.872,111,3.198,112,2.518,113,3.26,114,2.378,115,4.552,116,2.177,117,5.737,118,2.518,119,3.26,120,3.26]],["title/injectables/AuthService.html",[57,0.657,79,1.684]],["body/injectables/AuthService.html",[3,0.222,4,0.194,5,0.194,7,0.28,8,1.061,11,0.032,12,1.01,14,1.061,15,2.104,16,0.808,17,0.452,20,0.222,21,0.119,23,1.635,24,1.061,26,0.015,27,0.015,57,0.638,58,0.812,65,2.597,70,1.53,71,1.295,72,0.711,73,1.53,79,1.635,89,1.82,90,2.829,102,1.464,118,2.139,119,1.684,121,1.684,122,3.142,123,3.85,124,3.111,125,2.005,126,2.017,127,4.874,128,3.17,129,1.873,130,2.017,131,3.111,132,2.017,133,2.258,134,3.111,135,2.017,136,2.017,137,2.017,138,1.3,139,2.017,140,1.803,141,1.684,142,1.803,143,1.684,144,2.258,145,3.099,146,2.757,147,2.017,148,1.684,149,1.684,150,2.017,151,1.684,152,2.017,153,1.684,154,2.017,155,2.017,156,3.111,157,2.017,158,2.017,159,1.464,160,1.3,161,1.3,162,2.017]],["title/classes/CreateUserDto.html",[21,0.189,163,1.684]],["body/classes/CreateUserDto.html",[3,0.274,4,0.24,5,0.24,7,0.346,10,2.502,11,0.031,12,1.264,15,1.957,16,0.665,20,0.274,21,0.215,26,0.018,27,0.018,71,1.472,72,0.889,84,1.311,89,2.069,90,2.867,114,1.75,116,1.602,118,2.394,163,1.919,164,1.311,165,2.083,166,1.811,167,2.116,168,2.083,169,4.751,170,2.495,171,2.495,172,2.495,173,2.495,174,3.651,175,3.047,176,3.651,177,3.651,178,3.651,179,3.651,180,3.651,181,2.495,182,3.047,183,3.047,184,3.047,185,3.047,186,3.047,187,2.495,188,1.446,189,2.495,190,3.047,191,3.604,192,2.083,193,2.083,194,2.083,195,1.811,196,2.495,197,3.966,198,1.811,199,2.495,200,2.083,201,2.083,202,2.083]],["title/injectables/JwtAuthGuard.html",[52,2.065,57,0.657]],["body/injectables/JwtAuthGuard.html",[3,0.228,4,0.2,5,0.2,7,0.287,8,1.084,11,0.032,12,0.846,14,0.707,16,0.836,17,0.465,20,0.228,21,0.122,23,1.09,24,1.477,26,0.016,27,0.016,51,1.505,52,2.049,57,0.652,58,0.835,70,1.28,71,1.084,72,0.595,73,1.28,82,1.731,100,1.337,111,1.337,114,0.994,115,1.731,118,0.91,123,2.653,125,2.049,128,3.226,129,1.901,145,2.307,160,1.337,203,3.226,204,1.731,205,4.671,206,2.074,207,4.928,208,2.074,209,3.178,210,3.144,211,2.074,212,1.505,213,2.074,214,2.074,215,1.337,216,3.178,217,2.074,218,2.074,219,2.074,220,1.505,221,2.074,222,2.307,223,1.731,224,2.074,225,1.505,226,2.074,227,2.074,228,1.731,229,2.653,230,2.074,231,2.074,232,2.074,233,1.731,234,2.074,235,1.731,236,1.731,237,2.074,238,2.074,239,2.653,240,2.074,241,2.074,242,2.074,243,2.074,244,2.074,245,3.178,246,2.074,247,2.074,248,2.074,249,2.074,250,2.074,251,2.074,252,2.074,253,2.074]],["title/injectables/JwtStrategy.html",[57,0.657,95,1.857]],["body/injectables/JwtStrategy.html",[3,0.327,4,0.287,5,0.287,7,0.413,8,1.412,11,0.032,12,1.102,14,1.015,16,0.833,17,0.667,20,0.327,21,0.176,24,1.015,26,0.02,27,0.02,57,0.85,58,1.199,70,1.199,71,1.015,72,0.557,73,1.199,89,1.427,95,2.4,100,1.919,106,2.485,114,1.427,122,3.069,125,3.069,133,3.006,142,2.984,143,2.485,148,2.485,167,1.725,222,2.161,223,2.485,228,2.485,254,2.485,255,4.141,256,2.977,257,4.141,258,2.977,259,2.977,260,2.977,261,2.485,262,2.485,263,2.977,264,2.977,265,2.977,266,2.977,267,2.977,268,2.977,269,2.977,270,2.977,271,2.977]],["title/classes/LoginRequestBody.html",[21,0.189,67,2.065]],["body/classes/LoginRequestBody.html",[3,0.352,4,0.309,5,0.309,7,0.445,10,2.526,11,0.031,12,1.16,15,1.968,16,0.671,20,0.352,21,0.257,26,0.022,27,0.022,67,2.809,72,0.816,84,1.686,89,2.373,90,2.92,116,1.913,164,1.686,168,2.677,182,3.638,183,3.638,184,3.638,185,3.638,186,3.638,190,3.638,191,3.638,192,2.677,193,2.677,194,2.677,195,2.328,197,4.133,200,2.677,201,2.677,202,2.677,272,2.677,273,3.207,274,3.207,275,3.207]],["title/injectables/PrismaInterceptor.html",[57,0.657,276,2.325]],["body/injectables/PrismaInterceptor.html",[3,0.325,4,0.286,5,0.286,7,0.411,8,1.408,11,0.032,12,0.788,14,1.011,16,0.791,17,0.664,20,0.325,21,0.175,24,1.011,26,0.02,27,0.02,57,0.847,58,1.194,70,1.194,71,1.011,72,0.555,73,1.194,160,2.661,161,1.91,210,3.729,212,2.151,215,1.91,220,2.151,276,2.996,277,2.474,278,3.446,279,3.446,280,4.288,281,4.288,282,2.963,283,3.965,284,3.446,285,2.963,286,2.474,287,2.151,288,2.151,289,1.718,290,2.963,291,1.91,292,2.474,293,2.474,294,2.474,295,2.963,296,2.963,297,2.963,298,2.996]],["title/modules/PrismaModule.html",[28,1.29,299,2.065]],["body/modules/PrismaModule.html",[3,0.376,4,0.33,5,0.33,11,0.031,16,0.701,17,0.767,20,0.376,21,0.202,26,0.022,27,0.022,28,2.061,30,1.64,31,1.64,32,1.984,33,1.984,34,1.64,35,2.966,36,2.966,42,2.639,43,1.984,44,1.984,299,3.842,300,2.857,301,2.857,302,2.857,303,3.012,304,3.422,305,4.553,306,3.422]],["title/injectables/PrismaService.html",[57,0.657,303,1.535]],["body/injectables/PrismaService.html",[3,0.346,4,0.303,5,0.303,7,0.436,8,1.467,11,0.032,12,1.144,14,1.467,16,0.663,17,0.705,20,0.346,21,0.186,26,0.021,27,0.021,57,0.883,58,1.267,70,1.267,71,1.073,72,0.589,73,1.267,114,2.062,122,3.76,146,3.123,291,2.028,303,2.062,307,2.626,308,4.902,309,4.302,310,5.697,311,4.302,312,5.27,313,3.146,314,2.626,315,3.146,316,2.028,317,3.146,318,3.146,319,3.146]],["title/classes/UnauthorizedError.html",[21,0.189,140,1.857]],["body/classes/UnauthorizedError.html",[3,0.493,4,0.432,5,0.432,11,0.03,20,0.493,21,0.265,26,0.027,27,0.027,114,2.592,140,3.134,164,2.359,298,3.925,320,3.746]],["title/injectables/UnauthorizedInterceptor.html",[57,0.657,321,2.325]],["body/injectables/UnauthorizedInterceptor.html",[3,0.328,4,0.288,5,0.288,7,0.414,8,1.417,11,0.032,12,0.795,14,1.02,16,0.794,17,0.67,20,0.328,21,0.176,24,1.02,26,0.021,27,0.021,57,0.852,58,1.205,70,1.205,71,1.02,72,0.56,73,1.205,140,2.408,141,2.496,160,2.677,161,1.927,210,3.744,212,2.17,215,1.927,220,2.17,278,3.467,279,3.467,280,4.305,281,4.305,283,3.984,284,3.467,286,2.496,291,1.927,292,2.496,293,2.496,294,2.496,298,3.015,321,3.015,322,2.496,323,2.99,324,2.99,325,2.99,326,2.99]],["title/classes/UpdateUserDto.html",[21,0.189,327,1.857]],["body/classes/UpdateUserDto.html",[3,0.462,4,0.405,5,0.405,11,0.031,16,0.8,20,0.462,21,0.248,26,0.026,27,0.026,84,2.209,114,2.015,163,2.209,164,2.209,166,3.051,327,3.011,328,3.508,329,4.203,330,3.051,331,3.051,332,4.203]],["title/classes/User.html",[21,0.189,118,1.406]],["body/classes/User.html",[3,0.382,4,0.335,5,0.335,7,0.482,11,0.031,12,1.46,15,2.173,16,0.535,20,0.382,21,0.205,26,0.023,27,0.023,71,1.759,72,1.028,89,2.472,90,2.71,116,2.019,118,2.019,164,1.827,167,2.989,188,2.667,289,2.015,291,2.965,316,2.241,333,2.901,334,3.476,335,3.476,336,3.476,337,3.476,338,3.476]],["title/interfaces/UserPayload.html",[110,1.535,142,1.857]],["body/interfaces/UserPayload.html",[3,0.442,4,0.388,5,0.388,7,0.558,11,0.03,15,2.048,20,0.442,26,0.025,27,0.025,72,0.947,110,1.929,112,2.594,116,2.219,142,2.931,149,4.842,151,4.842,188,3.205,339,3.359]],["title/interfaces/UserToken.html",[110,1.535,138,2.065]],["body/interfaces/UserToken.html",[3,0.468,4,0.41,5,0.41,7,0.59,11,0.03,15,2.101,20,0.468,26,0.026,27,0.026,72,0.797,110,2.04,112,2.744,116,2.298,138,3.375,153,4.939,340,3.553]],["title/controllers/UsersController.html",[0,1.535,341,2.065]],["body/controllers/UsersController.html",[0,1,2,1,3,0.229,4,0.201,5,0.201,7,0.289,8,1.089,10,2.715,11,0.032,12,1.246,14,1.597,16,0.721,17,0.468,20,0.229,21,0.123,22,1.345,23,1.097,24,1.482,26,0.016,27,0.016,70,1.751,71,1.482,72,0.814,73,1.751,74,2.666,75,1.742,76,1.742,77,3.238,83,1.742,84,1.097,129,1.702,163,2.597,167,2.864,188,3.151,327,3.074,330,2.318,331,2.318,341,2.058,342,1.742,343,2.087,344,2.087,345,3.628,346,2.666,347,2.666,348,2.666,349,1.742,350,2.087,351,2.087,352,1.742,353,3.193,354,2.087,355,1.742,356,2.087,357,2.087,358,2.087,359,1.742,360,3.193,361,2.087,362,2.087,363,2.087,364,2.087,365,1.742,366,1.742,367,1.742,368,2.087,369,2.087,370,2.087,371,2.087,372,2.087,373,2.087,374,2.087,375,2.087,376,2.087,377,2.087,378,2.087,379,2.087,380,2.087]],["title/modules/UsersModule.html",[28,1.29,41,1.684]],["body/modules/UsersModule.html",[2,2.042,3,0.341,4,0.299,5,0.299,11,0.031,16,0.807,17,0.696,20,0.341,21,0.183,26,0.021,27,0.021,28,1.96,30,1.487,31,1.487,32,1.798,33,1.798,34,1.487,35,2.821,36,2.821,41,3.156,42,2.47,43,1.798,44,1.798,129,2.714,303,2.719,341,3.137,365,2.589,381,2.589,382,2.589,383,2.589,384,3.102,385,3.102,386,2.589]],["title/injectables/UsersService.html",[57,0.657,129,1.406]],["body/injectables/UsersService.html",[3,0.184,4,0.161,5,0.161,7,0.232,8,0.915,11,0.032,12,1.258,14,1.534,15,1.245,16,0.693,17,0.375,20,0.184,21,0.099,22,1.077,23,0.878,24,1.534,26,0.013,27,0.013,57,0.551,58,0.673,70,1.812,71,1.534,72,0.842,73,1.812,89,1.286,90,1.41,118,0.733,122,3.745,125,1.077,129,1.177,133,3.931,144,1.948,145,2.44,146,1.948,159,1.213,163,2.365,167,2.608,188,2.939,289,1.948,303,1.844,316,1.077,327,2.23,330,1.948,331,1.948,345,3.212,346,2.24,347,2.24,348,2.24,349,2.24,352,2.24,355,2.24,359,2.24,366,1.395,367,1.395,386,1.395,387,1.395,388,2.683,389,1.671,390,1.671,391,1.671,392,1.671,393,2.683,394,1.671,395,1.671,396,1.671,397,3.848,398,1.671,399,3.848,400,1.671,401,1.671,402,1.671,403,2.683,404,1.671,405,2.683,406,1.671,407,1.671,408,1.671,409,1.671]],["title/coverage.html",[410,3.161]],["body/coverage.html",[0,1.987,1,1.501,5,0.224,6,1.944,11,0.031,18,1.224,21,0.29,26,0.017,27,0.017,34,1.116,52,1.501,57,1.125,59,1.944,63,1.501,64,1.944,67,1.501,72,0.436,79,1.224,81,1.69,95,1.35,110,1.987,111,1.501,113,1.944,118,1.022,121,1.944,129,1.022,138,1.501,140,1.35,142,1.35,161,1.501,163,1.224,165,1.944,166,2.518,203,1.944,204,1.944,225,1.69,254,1.944,272,1.944,276,1.69,277,1.944,287,1.69,288,1.69,289,1.35,303,1.116,307,1.944,320,1.944,321,1.69,322,1.944,327,1.35,328,1.944,333,1.944,339,1.944,340,1.944,341,1.501,342,1.944,387,1.944,410,1.69,411,2.328,412,2.328,413,2.328,414,6.276,415,5.336,416,2.328,417,4.913,418,2.896,419,4.146,420,5.151,421,1.944,422,2.328,423,3.469,424,2.328,425,2.328,426,1.944,427,2.328,428,2.328]],["title/dependencies.html",[31,1.845,429,2.24]],["body/dependencies.html",[11,0.032,17,0.752,21,0.265,26,0.022,27,0.022,31,1.607,51,2.434,84,1.762,100,2.161,102,2.434,120,3.749,144,2.434,195,2.434,215,2.161,261,4.228,262,2.799,316,2.161,430,5.41,431,3.353,432,3.353,433,3.353,434,3.353,435,3.353,436,3.353,437,3.353,438,3.353,439,3.353,440,3.353,441,3.353,442,3.353,443,3.353,444,4.491,445,3.353,446,3.353,447,3.353,448,3.353,449,3.353,450,3.353,451,3.353,452,3.353,453,3.353]],["title/miscellaneous/functions.html",[454,1.41,455,3.212]],["body/miscellaneous/functions.html",[7,0.653,11,0.027,26,0.027,27,0.027,34,2.84,421,3.932,454,2.476,455,3.932,456,4.711]],["title/index.html",[7,0.372,457,2.683,458,2.683]],["body/index.html",[4,0.284,11,0.031,26,0.02,27,0.02,198,2.141,314,2.463,410,2.141,459,2.95,460,2.95,461,4.115,462,2.95,463,2.95,464,2.95,465,2.95,466,2.95,467,2.95,468,4.739,469,2.95,470,2.95,471,2.95,472,2.95,473,5.732,474,2.95,475,2.95,476,5.585,477,2.95,478,2.95,479,4.115,480,2.95,481,2.95,482,2.95,483,2.95,484,4.115,485,4.115,486,2.95,487,2.95,488,2.95,489,4.115,490,4.115,491,2.95,492,2.95,493,2.95,494,2.95,495,2.95,496,2.463,497,2.95,498,2.95,499,2.95,500,2.95,501,2.95,502,2.95,503,2.95,504,2.95,505,2.95,506,2.95,507,2.463,508,2.95,509,2.95,510,2.95,511,2.95,512,2.95,513,2.95,514,2.463]],["title/modules.html",[30,2.088]],["body/modules.html",[11,0.026,26,0.026,27,0.026,29,2.78,30,2.067,40,2.5,41,2.267,299,2.78,496,4.961,515,5.943,516,5.943,517,5.943]],["title/overview.html",[518,3.635]],["body/overview.html",[2,1.371,11,0.03,18,2.45,26,0.02,27,0.02,28,1.153,29,3.74,30,1.371,31,1.371,32,1.658,33,1.658,34,1.371,35,1.658,36,1.658,37,2.388,38,2.388,39,2.388,40,3.419,41,3.1,42,2.335,43,1.658,44,1.658,58,1.153,79,2.45,92,2.388,94,2.388,95,2.702,112,1.844,129,2.494,164,1.504,175,2.388,299,3.437,300,2.388,301,2.388,302,2.388,303,2.781,381,2.388,382,2.388,383,2.388,518,2.388,519,4.028,520,2.861,521,2.861]],["title/properties.html",[116,1.689,429,2.24]],["body/properties.html",[11,0.031,26,0.027,27,0.027,116,2.024,198,3.348,507,3.85,514,3.85,522,4.612,523,4.612,524,4.612]],["title/miscellaneous/typealiases.html",[454,1.41,525,3.848]],["body/miscellaneous/typealiases.html",[7,0.631,11,0.027,26,0.027,27,0.027,72,0.852,222,3.957,454,2.391,526,4.549,527,4.551,528,4.549,529,4.549,530,4.549,531,4.549,532,4.549]],["title/miscellaneous/variables.html",[454,1.41,533,3.212]],["body/miscellaneous/variables.html",[7,0.467,11,0.032,15,1.881,24,1.149,26,0.022,27,0.022,72,0.631,81,3.271,159,2.446,225,3.271,229,2.813,233,2.813,235,4.525,236,2.813,239,4.238,287,3.271,288,2.446,289,2.612,418,2.813,426,3.762,454,1.771,527,2.813,533,2.813,534,4.507,535,3.37,536,5.077,537,3.37,538,3.37,539,3.37,540,3.37,541,4.507,542,3.37,543,3.37]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":523,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["10d",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["11",{"_index":402,"title":{},"body":{"injectables/UsersService.html":{}}}],["16",{"_index":176,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3",{"_index":519,"title":{},"body":{"overview.html":{}}}],["4",{"_index":175,"title":{},"body":{"classes/CreateUserDto.html":{},"overview.html":{}}}],["4.0.1",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["4.16.2",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":521,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":520,"title":{},"body":{"overview.html":{}}}],["accesstoken",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/UserToken.html":{}}}],["aliases",{"_index":526,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":497,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":197,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["apiproperty()@isemail",{"_index":168,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["apiproperty()@isstring",{"_index":171,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@minlength(4)@maxlength(16)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":274,"title":{},"body":{"classes/LoginRequestBody.html":{}}}],["apiproperty({description",{"_index":173,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apitags",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('login",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":314,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":319,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":467,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["auth.controller",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":204,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:14",{"_index":208,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:22",{"_index":211,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":63,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":214,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":226,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":507,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authrequest",{"_index":111,"title":{"interfaces/AuthRequest.html":{}},"body":{"interfaces/AuthRequest.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":79,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":498,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":285,"title":{},"body":{"injectables/PrismaInterceptor.html":{}}}],["badrequestexception('database",{"_index":297,"title":{},"body":{"injectables/PrismaInterceptor.html":{}}}],["bcrypt",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":401,"title":{},"body":{"injectables/UsersService.html":{}}}],["between",{"_index":174,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["body",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":236,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["boolean(user",{"_index":253,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":517,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":515,"title":{},"body":{"modules.html":{}}}],["building",{"_index":462,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":281,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["canactivate",{"_index":205,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":209,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["catcherror",{"_index":286,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["catcherror((error",{"_index":294,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["characters",{"_index":177,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":164,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":300,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":301,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":302,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":381,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":383,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":382,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["console.log(error",{"_index":295,"title":{},"body":{"injectables/PrismaInterceptor.html":{}}}],["const",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(jwtservice",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(prisma",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(reflector",{"_index":206,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context",{"_index":212,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["context.getclass",{"_index":232,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":231,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":241,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('users",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":410,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":330,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createduser",{"_index":403,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":163,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["data",{"_index":399,"title":{},"body":{"injectables/UsersService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":198,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":475,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":397,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/create",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.clientversion",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.code",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.meta",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.meta.target",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":486,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":463,"title":{},"body":{"index.html":{}}}],["email",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["enableshutdownhooks",{"_index":309,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":311,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enough",{"_index":186,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["entities/user.entity",{"_index":196,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["error",{"_index":298,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["error('user",{"_index":246,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error.util",{"_index":290,"title":{},"body":{"injectables/PrismaInterceptor.html":{}}}],["error.util.ts",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":180,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["executioncontext",{"_index":210,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["expiresin",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":120,"title":{},"body":{"interfaces/AuthRequest.html":{},"dependencies.html":{}}}],["extends",{"_index":114,"title":{},"body":{"interfaces/AuthRequest.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":259,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":266,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":268,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyemail",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["found",{"_index":247,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["framework",{"_index":461,"title":{},"body":{"index.html":{}}}],["function",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":455,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":457,"title":{"index.html":{}},"body":{}}],["global",{"_index":305,"title":{},"body":{"modules/PrismaModule.html":{}}}],["grow",{"_index":493,"title":{},"body":{"index.html":{}}}],["handle",{"_index":292,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["hello",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":504,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{}}}],["httpcode(httpstatus.ok",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":511,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["id",{"_index":167,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":267,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":291,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/User.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["incorrect",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":312,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":169,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["inject",{"_index":213,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["inject(usersservice",{"_index":227,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["injectable",{"_index":57,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":472,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":474,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":325,"title":{},"body":{"injectables/UnauthorizedInterceptor.html":{}}}],["intercept",{"_index":278,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["intercept(context",{"_index":279,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["interface",{"_index":110,"title":{"interfaces/AuthRequest.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{}},"body":{"interfaces/AuthRequest.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["interfaces",{"_index":112,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"overview.html":{}}}],["is_public_key",{"_index":225,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":190,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["isprismaerror",{"_index":287,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isprismaerror(error",{"_index":296,"title":{},"body":{"injectables/PrismaInterceptor.html":{}}}],["ispublic",{"_index":229,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":191,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["isvalidpassword",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":500,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":262,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":52,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":265,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":95,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":508,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":514,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":490,"title":{},"body":{"index.html":{}}}],["local",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(undefined",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginrequestbody",{"_index":67,"title":{"classes/LoginRequestBody.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginRequestBody.html":{},"coverage.html":{}}}],["map",{"_index":216,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["map((req",{"_index":244,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["map((user",{"_index":252,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["matches",{"_index":192,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":202,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":193,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["maxlength(16",{"_index":201,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["mergemap",{"_index":217,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["mergemap((request",{"_index":242,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["mergemap((userfromjwt",{"_index":248,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["mergemap((value",{"_index":238,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["message",{"_index":184,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["metadata",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":194,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["minlength(4",{"_index":200,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["miscellaneous",{"_index":454,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":489,"title":{},"body":{"index.html":{}}}],["mode",{"_index":479,"title":{},"body":{"index.html":{}}}],["model/authrequest",{"_index":224,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["model/loginrequestbody",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["model/userfromjwt",{"_index":223,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["model/userpayload",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["model/usertoken",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":503,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":509,"title":{},"body":{"index.html":{}}}],["name",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":468,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":513,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":284,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{},"coverage.html":{}}}],["next",{"_index":280,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["node.js",{"_index":460,"title":{},"body":{"index.html":{}}}],["npm",{"_index":473,"title":{},"body":{"index.html":{}}}],["number",{"_index":188,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":283,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["of(canactivate).pipe",{"_index":237,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["of(request).pipe",{"_index":243,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["omg@123",{"_index":199,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["omg@123'})@isstring()@minlength(4)@maxlength(16)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":181,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["one",{"_index":178,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["onmoduleinit",{"_index":310,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":491,"title":{},"body":{"index.html":{}}}],["optional",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":518,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":429,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":532,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":329,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":332,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":261,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":263,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":270,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":271,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pipe",{"_index":293,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["please",{"_index":501,"title":{},"body":{"index.html":{}}}],["posix",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["post",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{}}}],["principal",{"_index":117,"title":{},"body":{"interfaces/AuthRequest.html":{}}}],["prisma",{"_index":289,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":306,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.usercreateinput",{"_index":400,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.useruncheckedcreateinput",{"_index":338,"title":{},"body":{"classes/User.html":{}}}],["prisma.userupdateinput",{"_index":407,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma/client",{"_index":316,"title":{},"body":{"injectables/PrismaService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":308,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclienterror",{"_index":527,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prismainterceptor",{"_index":276,"title":{"injectables/PrismaInterceptor.html":{}},"body":{"injectables/PrismaInterceptor.html":{},"coverage.html":{}}}],["prismamodule",{"_index":299,"title":{"modules/PrismaModule.html":{}},"body":{"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":303,"title":{"injectables/PrismaService.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["process.env.jwt_secret",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":481,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":459,"title":{},"body":{"index.html":{}}}],["project",{"_index":492,"title":{},"body":{"index.html":{}}}],["promise",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":116,"title":{"properties.html":{}},"body":{"interfaces/AuthRequest.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"properties.html":{}}}],["provide",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@post('login')@httpcode(httpstatus.ok",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["public.decorator",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["read",{"_index":502,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":207,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["remove",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":471,"title":{},"body":{"index.html":{}}}],["req.user",{"_index":245,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request",{"_index":115,"title":{},"body":{"interfaces/AuthRequest.html":{},"injectables/JwtAuthGuard.html":{}}}],["request.principal",{"_index":251,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":476,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":215,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":220,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["scalable",{"_index":464,"title":{},"body":{"index.html":{}}}],["secret",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":465,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":466,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["simble",{"_index":179,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":495,"title":{},"body":{"index.html":{}}}],["src/.../is",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":456,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prismaclienterror.ts",{"_index":528,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../public.decorator.ts",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../userfromjwt.ts",{"_index":529,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":203,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":254,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":258,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/model/authrequest.ts",{"_index":113,"title":{},"body":{"interfaces/AuthRequest.html":{},"coverage.html":{}}}],["src/auth/model/loginrequestbody.ts",{"_index":272,"title":{},"body":{"classes/LoginRequestBody.html":{},"coverage.html":{}}}],["src/auth/model/loginrequestbody.ts:18",{"_index":275,"title":{},"body":{"classes/LoginRequestBody.html":{}}}],["src/auth/model/loginrequestbody.ts:8",{"_index":273,"title":{},"body":{"classes/LoginRequestBody.html":{}}}],["src/auth/model/userfromjwt.ts",{"_index":531,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/auth/model/userpayload.ts",{"_index":339,"title":{},"body":{"interfaces/UserPayload.html":{},"coverage.html":{}}}],["src/auth/model/usertoken.ts",{"_index":340,"title":{},"body":{"interfaces/UserToken.html":{},"coverage.html":{}}}],["src/auth/public.decorator.ts",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/errors/prismaclienterror.ts",{"_index":530,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/errors/unauthorizederror",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["src/errors/unauthorizederror.ts",{"_index":320,"title":{},"body":{"classes/UnauthorizedError.html":{},"coverage.html":{}}}],["src/interceptors/prisma.interceptor.ts",{"_index":277,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/prisma.interceptor.ts:14",{"_index":282,"title":{},"body":{"injectables/PrismaInterceptor.html":{}}}],["src/interceptors/unauthorized.interceptor.ts",{"_index":322,"title":{},"body":{"injectables/UnauthorizedInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/unauthorized.interceptor.ts:14",{"_index":323,"title":{},"body":{"injectables/UnauthorizedInterceptor.html":{}}}],["src/main.ts",{"_index":421,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.modules.ts",{"_index":304,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":386,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":307,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":313,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":315,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/dto/create",{"_index":165,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":328,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":119,"title":{},"body":{"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{}}}],["src/users/entities/user.entity.ts",{"_index":333,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":335,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":336,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":334,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":337,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:13",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:18",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:23",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:28",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":384,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":395,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:38",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:42",{"_index":398,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:53",{"_index":396,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/is",{"_index":288,"title":{},"body":{"injectables/PrismaInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":477,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":480,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":482,"title":{},"body":{"index.html":{}}}],["started",{"_index":458,"title":{"index.html":{}},"body":{}}],["starter",{"_index":470,"title":{},"body":{"index.html":{}}}],["statements",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":505,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":185,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["sub",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/UserPayload.html":{}}}],["super",{"_index":228,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":234,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":496,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":516,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["takewhile",{"_index":218,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["takewhile((value",{"_index":240,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["tap",{"_index":219,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["tap((user",{"_index":250,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["test",{"_index":485,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":488,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":487,"title":{},"body":{"index.html":{}}}],["tests",{"_index":484,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":494,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":317,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":318,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(email",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign(payload",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.create",{"_index":404,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":409,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":406,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":405,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":408,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":230,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.userservice.findbyemail(email",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findone(userfromjwt.id",{"_index":249,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.usersservice.create(createuserdto",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validateuser(email",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PrismaInterceptor.html":{},"injectables/UnauthorizedInterceptor.html":{}}}],["touch",{"_index":506,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":233,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":512,"title":{},"body":{"index.html":{}}}],["type",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginRequestBody.html":{},"injectables/PrismaInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UnauthorizedInterceptor.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserToken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":525,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":235,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":469,"title":{},"body":{"index.html":{}}}],["ui",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["unauthorizederror",{"_index":140,"title":{"classes/UnauthorizedError.html":{}},"body":{"injectables/AuthService.html":{},"classes/UnauthorizedError.html":{},"injectables/UnauthorizedInterceptor.html":{},"coverage.html":{}}}],["unauthorizedexception",{"_index":324,"title":{},"body":{"injectables/UnauthorizedInterceptor.html":{}}}],["unauthorizedexception(error.message",{"_index":326,"title":{},"body":{"injectables/UnauthorizedInterceptor.html":{}}}],["unauthorizedinterceptor",{"_index":321,"title":{"injectables/UnauthorizedInterceptor.html":{}},"body":{"injectables/UnauthorizedInterceptor.html":{},"coverage.html":{}}}],["undefined",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":483,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["unlicensed",{"_index":524,"title":{},"body":{"properties.html":{}}}],["update",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":327,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["useclass",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":118,"title":{"classes/User.html":{}},"body":{"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":331,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":166,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.email",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["user:12",{"_index":170,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user:24",{"_index":187,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user:4",{"_index":189,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user:8",{"_index":172,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userfromjwt",{"_index":222,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["username",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/UserPayload.html":{}}}],["userpayload",{"_index":142,"title":{"interfaces/UserPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["users",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":385,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":221,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["userscontroller",{"_index":341,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["usersmodule",{"_index":41,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":129,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertoken",{"_index":138,"title":{"interfaces/UserToken.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["validate",{"_index":255,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":257,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":195,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{},"dependencies.html":{}}}],["value",{"_index":239,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":533,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":522,"title":{},"body":{"properties.html":{}}}],["void",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["watch",{"_index":478,"title":{},"body":{"index.html":{}}}],["website",{"_index":510,"title":{},"body":{"index.html":{}}}],["world",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":499,"title":{},"body":{"index.html":{}}}],["z",{"_index":183,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["z])(?=.*[a",{"_index":182,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestBody.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\n\n@Module({\n  imports: [UsersModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService, {\n    provide: APP_GUARD,\n    useClass: JwtAuthGuard\n  }],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginRequestBody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginRequestBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { LoginRequestBody } from './model/LoginRequestBody';\nimport { AuthService } from './auth.service';\nimport { Public } from './public.decorator';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('login')\n@Controller()\nexport class AuthController {\n    constructor(private readonly authService: AuthService) { }\n\n    @Public()\n    @Post('login')\n    @HttpCode(HttpStatus.OK)\n    login(@Body() { email, password }: LoginRequestBody) {\n        return this.authService.login(email, password)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [UsersModule, PassportModule, JwtModule.register({\n    secret: process.env.JWT_SECRET,\n    signOptions: { expiresIn: '10d' }\n  })],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthRequest.html":{"url":"interfaces/AuthRequest.html","title":"interface - AuthRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/model/AuthRequest.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            principal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        principal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        principal:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"src/users/entities/user.entity\";\nimport { Request } from 'express';\n\nexport interface AuthRequest extends Request {\n    principal: User;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Private\n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from 'src/users/entities/user.entity';\nimport { UsersService } from 'src/users/users.service';\nimport { UserToken } from './model/UserToken';\nimport { UnauthorizedError } from 'src/errors/UnauthorizedError';\nimport { UserPayload } from './model/UserPayload';\n\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly jwtService: JwtService,\n        private readonly userService: UsersService\n    ) {\n\n    }\n\n    async login(email: string, password: string): Promise {\n        const user: User = await this.validateUser(email, password)\n\n        const payload: UserPayload = {\n            username: user.email,\n            sub: user.id\n        }\n\n        return {\n            accessToken: this.jwtService.sign(payload)\n        }\n    }\n\n    private async validateUser(email: string, password: string) {\n        const user = await this.userService.findByEmail(email)\n\n        if (user) {\n            const isValidPassword = await bcrypt.compare(password, user.password)\n\n            if (isValidPassword) {\n                return {\n                    ...user,\n                    password: undefined\n                }\n            }\n        }\n\n        throw new UnauthorizedError(\n            'Incorrect email or password'\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Password must have between 4-16 characters and at least one simble', example: 'Omg@123'})@IsString()@MinLength(4)@MaxLength(16)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password not strong enough'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, Matches, MaxLength, MinLength } from \"class-validator\";\nimport { User } from \"../entities/user.entity\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserDto extends User {\n    @ApiProperty()\n    @IsString()\n    name: string;\n\n    @ApiProperty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty({\n        description: 'Password must have between 4-16 characters and at least one simble',\n        example: 'Omg@123'\n    })\n    @IsString()\n    @MinLength(4)\n    @MaxLength(16)\n    @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n        message: 'password not strong enough',\n    })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Inject, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { of } from 'rxjs';\nimport { map, mergeMap, takeWhile, tap } from 'rxjs/operators';\n\nimport { UsersService } from '../users/users.service';\nimport { UserFromJwt } from './model/UserFromJwt';\nimport { AuthRequest } from './model/AuthRequest';\nimport { IS_PUBLIC_KEY } from './public.decorator';\n\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n    constructor(\n        private reflector: Reflector,\n        @Inject(UsersService) private readonly userService: UsersService,\n    ) {\n        super();\n    }\n\n    canActivate(context: ExecutionContext) {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n\n        if (isPublic) {\n            return true;\n        }\n\n        const canActivate = super.canActivate(context);\n\n        if (typeof canActivate === 'boolean') {\n            return canActivate;\n        }\n\n        return of(canActivate).pipe(\n            mergeMap((value) => value),\n            takeWhile((value) => value),\n            map(() => context.switchToHttp().getRequest()),\n            mergeMap((request) =>\n                of(request).pipe(\n                    map((req) => {\n                        if (!req.user) {\n                            throw Error('User was not found in request.');\n                        }\n\n                        return req.user;\n                    }),\n                    mergeMap((userFromJwt: UserFromJwt) =>\n                        this.userService.findOne(userFromJwt.id),\n                    ),\n                    tap((user) => {\n                        request.principal = user;\n                    }),\n                ),\n            ),\n            map((user) => Boolean(user)),\n        );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: UserPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { UserPayload } from './model/UserPayload';\nimport { UserFromJwt } from './model/UserFromJwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.JWT_SECRET,\n        });\n    }\n\n    async validate(payload: UserPayload): Promise {\n        return { id: payload.sub, email: payload.username };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginRequestBody.html":{"url":"classes/LoginRequestBody.html","title":"class - LoginRequestBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginRequestBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/model/LoginRequestBody.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/model/LoginRequestBody.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(4)@MaxLength(16)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password not strong enough'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/model/LoginRequestBody.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\n\nexport class LoginRequestBody {\n    @ApiProperty()\n    @IsEmail()\n    email: string;\n\n\n    @ApiProperty()\n    @IsString()\n    @MinLength(4)\n    @MaxLength(16)\n    @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n        message: 'password not strong enough',\n    })\n    password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaInterceptor.html":{"url":"injectables/PrismaInterceptor.html","title":"injectable - PrismaInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/prisma.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/prisma.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n    BadRequestException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { isPrismaError } from 'src/utils/is-prisma-error.util';\n\n@Injectable()\nexport class PrismaInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next\n            .handle()\n            .pipe(\n                catchError((error) => {\n                    console.log(error)\n                    if (isPrismaError(error)) {\n                        throw new BadRequestException('Database error');\n                    } else {\n                        throw error;\n                    }\n                }),\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.modules.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \"@nestjs/common\";\nimport { PrismaService } from \"./prisma.service\";\n\n@Global()\n@Module({\n    providers: [PrismaService],\n    exports: [PrismaService]\n})\nexport class PrismaModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    async onModuleInit() {\n        await this.$connect();\n    }\n\n    async enableShutdownHooks(app: INestApplication) {\n        this.$on('beforeExit', async () => {\n            await app.close();\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedError.html":{"url":"classes/UnauthorizedError.html","title":"class - UnauthorizedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/UnauthorizedError.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnauthorizedError extends Error { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UnauthorizedInterceptor.html":{"url":"injectables/UnauthorizedInterceptor.html","title":"injectable - UnauthorizedInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UnauthorizedInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/unauthorized.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/unauthorized.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    UnauthorizedException,\n    CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { UnauthorizedError } from 'src/errors/UnauthorizedError';\n\n@Injectable()\nexport class UnauthorizedInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next\n            .handle()\n            .pipe(\n                catchError((error) => {\n                    if (error instanceof UnauthorizedError) {\n                        throw new UnauthorizedException(error.message);\n                    } else {\n                        throw error;\n                    }\n                }),\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prisma } from '@prisma/client';\n\nexport class User implements Prisma.UserUncheckedCreateInput {\n    id: number;\n    name: string;\n    email: string;\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload.html":{"url":"interfaces/UserPayload.html","title":"interface - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/model/UserPayload.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPayload {\n    username: string;\n    sub: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserToken.html":{"url":"interfaces/UserToken.html","title":"interface - UserToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/model/UserToken.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserToken {\n    accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  remove(@Param('id') id: number) {\n    this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService, PrismaService],\n  exports: [UsersService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma, User } from '@prisma/client';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly prisma: PrismaService) { }\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const data: Prisma.UserCreateInput = {\n      ...createUserDto,\n      password: await bcrypt.hash(createUserDto.password, 11)\n    };\n\n    const createdUser = await this.prisma.user.create({ data })\n\n    return {\n      ...createdUser,\n      password: undefined\n    }\n  }\n\n  async findOne(id: number): Promise {\n    return this.prisma.user.findUnique({\n      where: { id }\n    })\n  }\n\n  async findByEmail(email: string): Promise {\n    return this.prisma.user.findUnique({\n      where: { email }\n    })\n  }\n\n  async findAll(): Promise {\n    return this.prisma.user.findMany();\n  }\n\n  async update(id: number, dto: UpdateUserDto): Promise {\n    const data: Prisma.UserUpdateInput = {\n      ...dto,\n    }\n\n    return this.prisma.user.update({\n      where: { id },\n      data,\n    })\n  }\n\n  async remove(id: number): Promise {\n    return this.prisma.user.delete({\n      where: { id },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/model/AuthRequest.ts\n            \n            interface\n            AuthRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/model/LoginRequestBody.ts\n            \n            class\n            LoginRequestBody\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/model/UserPayload.ts\n            \n            interface\n            UserPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/model/UserToken.ts\n            \n            interface\n            UserToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/errors/UnauthorizedError.ts\n            \n            class\n            UnauthorizedError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/prisma.interceptor.ts\n            \n            injectable\n            PrismaInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/unauthorized.interceptor.ts\n            \n            injectable\n            UnauthorizedInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/is-prisma-error.util.ts\n            \n            variable\n            isPrismaError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.1\n        \n            @prisma/client : ^4.16.2\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            path-posix : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^4.6.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PrismaClientError   (src/.../PrismaClientError.ts)\n                        \n                        \n                            UserFromJwt   (src/.../UserFromJwt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/errors/PrismaClientError.ts\n    \n    \n        \n            \n                \n                    \n                    PrismaClientError\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/model/UserFromJwt.ts\n    \n    \n        \n            \n                \n                    \n                    UserFromJwt\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            isPrismaError   (src/.../is-prisma-error.util.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/utils/is-prisma-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isPrismaError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (e: PrismaClientError): boolean => {\n    return typeof e.code === 'string' &&\n        typeof e.clientVersion === 'string' &&\n        (typeof e.meta === 'undefined' ||\n            (typeof e.meta === 'object' &&\n                !!e.meta.target)\n        )\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
